%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Sep  8 15:45:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Finegoldia_magna_BVS033A4)
} def

/sequence { (\
UAAAGAAGGUGUCCCACUACCUAUAUCAAAGGUGAAACAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 5 0.010192828 ubox
1 6 0.019469171 ubox
1 7 0.015327884 ubox
1 8 0.015983459 ubox
1 9 0.004657858 ubox
1 11 0.006462690 ubox
1 23 0.009472801 ubox
1 25 0.045113518 ubox
1 28 0.016787261 ubox
1 29 0.012390813 ubox
1 30 0.007605442 ubox
1 31 0.008666777 ubox
1 32 0.007729412 ubox
1 34 0.009326694 ubox
1 35 0.005905943 ubox
1 36 0.005759212 ubox
1 37 0.004472883 ubox
1 39 0.004338728 ubox
2 10 0.007070703 ubox
2 22 0.006780683 ubox
2 24 0.047721013 ubox
2 26 0.013000074 ubox
2 33 0.009568509 ubox
2 40 0.003479480 ubox
3 10 0.007339504 ubox
3 12 0.004564907 ubox
3 18 0.004285873 ubox
3 22 0.006621263 ubox
3 24 0.026081859 ubox
3 26 0.025968021 ubox
3 33 0.003235395 ubox
3 40 0.004516571 ubox
4 10 0.011078859 ubox
4 12 0.007164848 ubox
4 18 0.061181825 ubox
4 22 0.104414086 ubox
4 24 0.060835741 ubox
4 26 0.031940773 ubox
4 33 0.004051816 ubox
4 40 0.004773732 ubox
5 10 0.003959577 ubox
5 12 0.004805411 ubox
5 13 0.052713606 ubox
5 14 0.023280756 ubox
5 15 0.023303072 ubox
5 17 0.075535315 ubox
5 18 0.008326065 ubox
5 20 0.011834914 ubox
5 21 0.107814228 ubox
5 22 0.006855843 ubox
5 24 0.104559373 ubox
5 26 0.016103565 ubox
5 27 0.202300397 ubox
5 38 0.024251890 ubox
5 40 0.004781896 ubox
6 10 0.006099352 ubox
6 12 0.050532661 ubox
6 18 0.007902064 ubox
6 22 0.025751146 ubox
6 24 0.051417340 ubox
6 26 0.201136919 ubox
6 33 0.003688440 ubox
6 40 0.008758459 ubox
7 12 0.010933432 ubox
7 18 0.071587620 ubox
7 22 0.550001418 ubox
7 24 0.009689356 ubox
7 40 0.012203089 ubox
8 13 0.021667675 ubox
8 14 0.123347204 ubox
8 15 0.299212477 ubox
8 17 0.086368739 ubox
8 18 0.334092474 ubox
8 21 0.568560902 ubox
8 22 0.009477406 ubox
8 27 0.017470514 ubox
8 38 0.020123773 ubox
8 40 0.023563928 ubox
9 13 0.121812392 ubox
9 14 0.297295837 ubox
9 15 0.022454425 ubox
9 17 0.406907119 ubox
9 18 0.003427671 ubox
9 20 0.568630403 ubox
9 21 0.009576678 ubox
9 26 0.017547187 ubox
9 38 0.083584223 ubox
9 40 0.517106413 ubox
10 16 0.407352840 ubox
10 19 0.566433899 ubox
10 25 0.017561866 ubox
10 36 0.004159749 ubox
10 37 0.081689286 ubox
10 39 0.553166063 ubox
11 15 0.401116434 ubox
11 17 0.197484754 ubox
11 18 0.493965947 ubox
11 20 0.009903129 ubox
11 24 0.017372057 ubox
11 38 0.564258793 ubox
11 40 0.012360354 ubox
12 16 0.181771457 ubox
12 19 0.009501056 ubox
12 23 0.016664333 ubox
12 34 0.003918909 ubox
12 35 0.075206846 ubox
12 36 0.012481664 ubox
12 37 0.558619679 ubox
12 39 0.013046430 ubox
13 32 0.007282778 ubox
13 34 0.079747010 ubox
14 31 0.007264689 ubox
14 32 0.051330587 ubox
14 34 0.027640572 ubox
15 31 0.051290451 ubox
15 32 0.008087882 ubox
15 34 0.511533689 ubox
16 33 0.499175689 ubox
17 31 0.027681316 ubox
17 32 0.487779619 ubox
17 34 0.103886892 ubox
18 25 0.009801666 ubox
18 28 0.008332834 ubox
18 29 0.007640058 ubox
18 30 0.035627578 ubox
18 31 0.470125010 ubox
18 34 0.486844076 ubox
18 35 0.027810207 ubox
18 36 0.011022066 ubox
18 37 0.005126397 ubox
19 24 0.013657514 ubox
19 26 0.023639079 ubox
19 33 0.626884338 ubox
20 31 0.019033322 ubox
20 32 0.646282199 ubox
20 34 0.007913236 ubox
21 31 0.649449742 ubox
21 32 0.015780420 ubox
21 34 0.004886165 ubox
22 28 0.037173727 ubox
22 29 0.082079955 ubox
22 30 0.636115344 ubox
22 31 0.018156633 ubox
22 34 0.014878223 ubox
22 35 0.007379621 ubox
22 36 0.011590499 ubox
22 37 0.004638072 ubox
22 39 0.006707354 ubox
23 33 0.024265052 ubox
23 40 0.022399852 ubox
24 28 0.098562768 ubox
24 29 0.084347983 ubox
24 30 0.022106029 ubox
24 31 0.009433040 ubox
24 32 0.024349645 ubox
24 34 0.098408079 ubox
24 35 0.016762967 ubox
24 36 0.027787044 ubox
24 37 0.052749557 ubox
24 39 0.025080924 ubox
25 33 0.119533777 ubox
25 40 0.006756947 ubox
26 30 0.009170186 ubox
26 31 0.006483360 ubox
26 32 0.120462128 ubox
26 34 0.003287378 ubox
26 35 0.302384476 ubox
26 36 0.014116127 ubox
26 37 0.003911372 ubox
26 39 0.005737926 ubox
27 31 0.117585741 ubox
27 32 0.027830118 ubox
27 34 0.322923717 ubox
28 33 0.280963898 ubox
28 40 0.004201496 ubox
29 33 0.009981556 ubox
29 40 0.014060410 ubox
30 40 0.012903873 ubox
31 38 0.139221646 ubox
31 40 0.011425102 ubox
32 38 0.074760131 ubox
32 40 0.086551281 ubox
33 37 0.067562765 ubox
33 39 0.092940100 ubox
34 38 0.094595012 ubox
34 40 0.003734626 ubox
35 40 0.009241152 ubox
36 40 0.005646951 ubox
9 40 0.9500000 lbox
10 39 0.9500000 lbox
11 38 0.9500000 lbox
12 37 0.9500000 lbox
15 34 0.9500000 lbox
16 33 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
showpage
end
%%EOF
