%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Sep  8 15:45:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Eubacterium_yurii_subsp._margaretiae_ATCC_43715)
} def

/sequence { (\
UAAAAGAGUAGGAGAACCCGAGCCUUAUAAGUGGGAGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 5 0.008762577 ubox
1 6 0.016505585 ubox
1 7 0.015181342 ubox
1 8 0.015923892 ubox
1 10 0.047649101 ubox
1 11 0.007767355 ubox
1 12 0.007439732 ubox
1 13 0.006273369 ubox
1 14 0.005666080 ubox
1 15 0.005221700 ubox
1 16 0.003695305 ubox
1 27 0.033584149 ubox
1 29 0.255050078 ubox
1 30 0.022499334 ubox
1 31 0.010590425 ubox
1 33 0.023191650 ubox
1 34 0.011668695 ubox
1 35 0.011462501 ubox
1 36 0.008926258 ubox
1 37 0.004069187 ubox
2 9 0.048050058 ubox
2 26 0.030980107 ubox
2 28 0.266657436 ubox
2 32 0.024622843 ubox
3 9 0.014941094 ubox
3 25 0.018891929 ubox
3 26 0.036547087 ubox
3 28 0.047114686 ubox
3 32 0.021039526 ubox
3 38 0.003678055 ubox
4 9 0.015904556 ubox
4 25 0.030736914 ubox
4 26 0.522433614 ubox
4 28 0.025531075 ubox
4 32 0.021410112 ubox
4 38 0.003176946 ubox
5 9 0.009797297 ubox
5 25 0.557807342 ubox
5 26 0.039838141 ubox
5 28 0.012995892 ubox
5 32 0.013530459 ubox
5 38 0.003509833 ubox
6 17 0.007598874 ubox
6 18 0.038774375 ubox
6 19 0.062496418 ubox
6 23 0.045403806 ubox
6 24 0.561833172 ubox
6 25 0.039625649 ubox
6 26 0.104298729 ubox
6 28 0.005864156 ubox
6 32 0.006211814 ubox
6 38 0.003265663 ubox
7 25 0.108036709 ubox
7 26 0.007617786 ubox
7 28 0.051755428 ubox
7 32 0.008786002 ubox
7 38 0.008954069 ubox
8 17 0.097384088 ubox
8 18 0.010379116 ubox
8 19 0.028024236 ubox
8 23 0.536702172 ubox
8 24 0.099378313 ubox
8 25 0.004223095 ubox
8 26 0.011206700 ubox
8 28 0.145370438 ubox
9 13 0.007282303 ubox
9 14 0.013993477 ubox
9 15 0.013451857 ubox
9 16 0.095469208 ubox
9 20 0.047971988 ubox
9 21 0.173231026 ubox
9 22 0.530699332 ubox
9 27 0.149247114 ubox
9 29 0.012983612 ubox
9 30 0.005423132 ubox
9 36 0.010110828 ubox
9 37 0.003634241 ubox
10 25 0.083923487 ubox
10 26 0.145903414 ubox
10 28 0.013466043 ubox
10 38 0.006009211 ubox
11 17 0.045797953 ubox
11 18 0.260335341 ubox
11 19 0.623552840 ubox
11 23 0.006637390 ubox
11 24 0.093261948 ubox
11 25 0.141995809 ubox
11 38 0.011743360 ubox
12 17 0.260218591 ubox
12 18 0.622700754 ubox
12 19 0.185929576 ubox
12 23 0.093140363 ubox
12 24 0.141938749 ubox
12 26 0.023913372 ubox
12 38 0.019078541 ubox
13 25 0.025727231 ubox
13 38 0.029185947 ubox
14 18 0.037015015 ubox
14 19 0.045274493 ubox
14 23 0.115027695 ubox
14 24 0.025729084 ubox
14 38 0.042103567 ubox
15 38 0.024358860 ubox
16 32 0.004090451 ubox
16 38 0.128341768 ubox
17 22 0.018249152 ubox
17 31 0.004190652 ubox
17 33 0.003779440 ubox
17 34 0.052771039 ubox
17 35 0.611661802 ubox
17 37 0.141624594 ubox
18 22 0.007206299 ubox
18 33 0.052803608 ubox
18 34 0.614730071 ubox
18 35 0.189445663 ubox
18 37 0.018392768 ubox
19 31 0.047779803 ubox
19 33 0.614298590 ubox
19 34 0.189430255 ubox
19 35 0.034118644 ubox
19 37 0.066826497 ubox
20 24 0.006899356 ubox
20 25 0.005733482 ubox
20 26 0.011880841 ubox
20 28 0.005635884 ubox
20 32 0.486372275 ubox
20 38 0.058118682 ubox
21 25 0.012385483 ubox
21 26 0.018885051 ubox
21 28 0.076444024 ubox
21 32 0.158803712 ubox
21 38 0.029946061 ubox
22 26 0.006300022 ubox
22 28 0.037833121 ubox
22 32 0.226252747 ubox
22 38 0.098320324 ubox
23 31 0.250052044 ubox
23 33 0.019850602 ubox
23 34 0.258197165 ubox
23 35 0.327674045 ubox
23 37 0.104570796 ubox
24 31 0.270070118 ubox
24 33 0.259986124 ubox
24 34 0.329579185 ubox
24 35 0.151020077 ubox
24 37 0.083435619 ubox
25 29 0.052314088 ubox
25 30 0.254104566 ubox
25 31 0.035562791 ubox
25 33 0.324911503 ubox
25 34 0.151065748 ubox
25 35 0.006305690 ubox
25 36 0.084508279 ubox
26 30 0.031613515 ubox
26 31 0.041150763 ubox
26 33 0.147893927 ubox
26 34 0.008055267 ubox
26 35 0.084007762 ubox
26 36 0.004323164 ubox
27 32 0.128938945 ubox
27 38 0.022099517 ubox
28 33 0.016162429 ubox
28 34 0.010883430 ubox
28 35 0.009320304 ubox
28 36 0.007710647 ubox
28 37 0.024058124 ubox
29 38 0.006409418 ubox
30 38 0.012457372 ubox
31 38 0.008104993 ubox
32 36 0.010044512 ubox
32 37 0.015233039 ubox
33 38 0.012440569 ubox
34 38 0.004709821 ubox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
showpage
end
%%EOF
