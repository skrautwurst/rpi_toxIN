%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Sep  8 15:45:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Leptotrichia_hofstadii_F0254)
} def

/sequence { (\
UAAAAACAGGUGUUCCACUACCUUAAAAUGAAGGACAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 5 0.010512805 ubox
1 6 0.015700993 ubox
1 8 0.017134067 ubox
1 9 0.004873067 ubox
1 10 0.005649042 ubox
1 12 0.007950610 ubox
1 17 0.004689650 ubox
1 20 0.010006697 ubox
1 25 0.034873796 ubox
1 26 0.006444355 ubox
1 27 0.007478031 ubox
1 28 0.008616279 ubox
1 30 0.059846122 ubox
1 31 0.023744370 ubox
1 32 0.007835328 ubox
1 33 0.004679629 ubox
1 34 0.005238433 ubox
1 35 0.006422922 ubox
1 37 0.006130845 ubox
1 38 0.007297951 ubox
1 39 0.004498169 ubox
2 11 0.008919566 ubox
2 14 0.004251267 ubox
2 19 0.009338981 ubox
2 24 0.036654502 ubox
2 29 0.061379046 ubox
3 11 0.003702483 ubox
3 13 0.004103774 ubox
3 14 0.008562372 ubox
3 19 0.005133480 ubox
3 23 0.020136567 ubox
3 24 0.020552043 ubox
3 29 0.021826847 ubox
4 11 0.006114800 ubox
4 13 0.008780697 ubox
4 14 0.009193098 ubox
4 19 0.008150720 ubox
4 23 0.012475525 ubox
4 24 0.028628475 ubox
4 29 0.014703807 ubox
5 11 0.005028698 ubox
5 13 0.008102960 ubox
5 14 0.111481636 ubox
5 19 0.011936029 ubox
5 23 0.017993479 ubox
5 24 0.038212177 ubox
5 29 0.010526574 ubox
6 11 0.004758525 ubox
6 13 0.124228717 ubox
6 14 0.003403142 ubox
6 19 0.037091130 ubox
6 23 0.020394605 ubox
6 24 0.065613272 ubox
6 29 0.006932717 ubox
7 12 0.125650968 ubox
7 30 0.030064019 ubox
7 33 0.022515649 ubox
7 34 0.014102444 ubox
7 38 0.036409189 ubox
8 13 0.006195542 ubox
8 14 0.004636505 ubox
8 19 0.121038494 ubox
8 23 0.503386769 ubox
8 24 0.038873027 ubox
8 29 0.021975908 ubox
9 13 0.003802526 ubox
9 14 0.004002618 ubox
9 15 0.020762065 ubox
9 16 0.401936909 ubox
9 18 0.124231412 ubox
9 19 0.634852266 ubox
9 21 0.004808435 ubox
9 22 0.539499769 ubox
9 23 0.032575730 ubox
9 24 0.003477075 ubox
9 36 0.014946124 ubox
10 14 0.013652918 ubox
10 15 0.401293523 ubox
10 16 0.024711067 ubox
10 18 0.659379807 ubox
10 19 0.006816476 ubox
10 21 0.539748792 ubox
10 22 0.032896210 ubox
10 23 0.003564349 ubox
10 36 0.031482284 ubox
11 17 0.659346089 ubox
11 20 0.537722872 ubox
11 34 0.010614256 ubox
11 35 0.030485622 ubox
11 37 0.152902623 ubox
11 38 0.010074111 ubox
11 39 0.004775988 ubox
12 16 0.648973221 ubox
12 18 0.186401407 ubox
12 19 0.468940426 ubox
12 21 0.034052228 ubox
12 36 0.169663699 ubox
13 17 0.171610455 ubox
13 20 0.034155510 ubox
13 32 0.013998335 ubox
13 33 0.020504234 ubox
13 35 0.156349097 ubox
13 37 0.005680934 ubox
13 38 0.003231931 ubox
13 39 0.004150228 ubox
14 31 0.014813835 ubox
14 32 0.019085552 ubox
14 34 0.130619848 ubox
14 35 0.076150659 ubox
14 38 0.004322866 ubox
14 39 0.027010184 ubox
15 30 0.014898243 ubox
15 33 0.128570633 ubox
15 34 0.101825461 ubox
15 38 0.032549460 ubox
16 30 0.044593620 ubox
16 33 0.101790296 ubox
16 34 0.005708986 ubox
16 38 0.039896531 ubox
17 29 0.041879904 ubox
18 30 0.098107051 ubox
18 33 0.017192101 ubox
18 34 0.010968183 ubox
18 38 0.204882092 ubox
19 25 0.011087375 ubox
19 26 0.009427240 ubox
19 27 0.017695294 ubox
19 28 0.024484251 ubox
19 30 0.040024538 ubox
19 31 0.012173923 ubox
19 32 0.018924261 ubox
19 33 0.010717371 ubox
19 35 0.074218835 ubox
19 37 0.199998731 ubox
19 38 0.024079219 ubox
19 39 0.003492226 ubox
20 24 0.010103321 ubox
20 29 0.042949374 ubox
21 30 0.023553151 ubox
21 33 0.010856299 ubox
21 34 0.812996126 ubox
21 38 0.004086706 ubox
22 30 0.024876112 ubox
22 33 0.816615466 ubox
22 34 0.040627395 ubox
22 38 0.008777004 ubox
23 27 0.005335354 ubox
23 28 0.007984774 ubox
23 30 0.011081026 ubox
23 31 0.063460403 ubox
23 32 0.813106677 ubox
23 33 0.040655060 ubox
23 34 0.008321671 ubox
23 35 0.006583766 ubox
23 37 0.008342956 ubox
23 38 0.003256927 ubox
24 28 0.008883146 ubox
24 30 0.087857351 ubox
24 31 0.766543946 ubox
24 32 0.040752085 ubox
24 33 0.015969850 ubox
24 34 0.009605020 ubox
24 35 0.004963779 ubox
24 37 0.005325728 ubox
24 38 0.006242811 ubox
25 29 0.086345328 ubox
29 33 0.005006524 ubox
29 34 0.011871439 ubox
29 35 0.019176590 ubox
29 37 0.089641343 ubox
29 38 0.010942746 ubox
29 39 0.008523135 ubox
30 36 0.099288259 ubox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
11 17 0.9500000 lbox
12 16 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
showpage
end
%%EOF
