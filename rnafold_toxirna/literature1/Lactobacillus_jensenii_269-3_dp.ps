%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Sep  8 15:45:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Lactobacillus_jensenii_269-3)
} def

/sequence { (\
UAAAAGUCAGGUGAGCUCGGCCUUAUAAGUGAGCGUUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 5 0.010557650 ubox
1 6 0.017037766 ubox
1 9 0.012096971 ubox
1 10 0.020617704 ubox
1 11 0.009089178 ubox
1 13 0.017013552 ubox
1 14 0.007493482 ubox
1 25 0.013194694 ubox
1 27 0.015575592 ubox
1 31 0.030392339 ubox
1 32 0.006855195 ubox
1 35 0.003818582 ubox
1 38 0.057113003 ubox
2 7 0.013098453 ubox
2 12 0.017664418 ubox
2 24 0.013913012 ubox
2 26 0.016091120 ubox
2 30 0.032716742 ubox
2 36 0.008090864 ubox
2 37 0.068376845 ubox
3 7 0.009596093 ubox
3 12 0.020947025 ubox
3 23 0.012431847 ubox
3 24 0.025060960 ubox
3 26 0.003770856 ubox
3 30 0.008847705 ubox
3 36 0.068212604 ubox
3 37 0.027624104 ubox
4 12 0.013843637 ubox
4 17 0.007544320 ubox
4 23 0.025593527 ubox
4 24 0.027073895 ubox
4 26 0.004218975 ubox
4 30 0.007841318 ubox
4 36 0.024919836 ubox
4 37 0.020120435 ubox
5 12 0.042968589 ubox
5 17 0.036967154 ubox
5 23 0.028437168 ubox
5 24 0.005836309 ubox
5 26 0.014440858 ubox
5 30 0.008025075 ubox
5 36 0.018706487 ubox
5 37 0.013360291 ubox
6 12 0.009527585 ubox
6 16 0.039150708 ubox
6 18 0.005471191 ubox
6 21 0.069137006 ubox
6 22 0.021341781 ubox
6 24 0.007141129 ubox
6 26 0.100256115 ubox
6 34 0.060871054 ubox
6 36 0.011107045 ubox
6 37 0.012989083 ubox
7 11 0.008940780 ubox
7 13 0.009734102 ubox
7 14 0.250089212 ubox
7 15 0.028378190 ubox
7 19 0.003347991 ubox
7 20 0.071795426 ubox
7 25 0.102352158 ubox
7 27 0.006664070 ubox
7 28 0.005804457 ubox
7 32 0.104057401 ubox
7 33 0.035512933 ubox
7 35 0.006490547 ubox
7 38 0.012878306 ubox
8 13 0.267312315 ubox
8 15 0.011698285 ubox
8 19 0.072577750 ubox
8 20 0.006516070 ubox
8 29 0.010012676 ubox
8 31 0.111058004 ubox
8 33 0.005942055 ubox
8 35 0.015496749 ubox
9 17 0.062298909 ubox
9 23 0.148918427 ubox
9 24 0.007099682 ubox
9 30 0.104596990 ubox
9 36 0.067984041 ubox
9 37 0.027817795 ubox
10 16 0.063001269 ubox
10 17 0.038081134 ubox
10 18 0.015984634 ubox
10 21 0.010181550 ubox
10 22 0.157994174 ubox
10 23 0.003439829 ubox
10 26 0.003792862 ubox
10 30 0.007466733 ubox
10 34 0.006395057 ubox
10 36 0.019629179 ubox
10 37 0.065436608 ubox
11 16 0.038685383 ubox
11 17 0.012920903 ubox
11 18 0.009550556 ubox
11 21 0.158032620 ubox
11 22 0.003353361 ubox
11 26 0.106701141 ubox
11 34 0.100419444 ubox
11 36 0.057464158 ubox
11 37 0.092243114 ubox
12 19 0.042071709 ubox
12 20 0.152024718 ubox
12 25 0.112063605 ubox
12 27 0.005065799 ubox
12 32 0.004352423 ubox
12 33 0.100350433 ubox
12 35 0.026046959 ubox
12 38 0.332049571 ubox
13 18 0.058403983 ubox
13 22 0.005251472 ubox
13 24 0.112771412 ubox
13 26 0.003787520 ubox
13 34 0.010912979 ubox
13 36 0.295288035 ubox
13 37 0.406755701 ubox
14 23 0.112774534 ubox
14 36 0.397202241 ubox
14 37 0.031896965 ubox
15 21 0.041322023 ubox
15 22 0.104600031 ubox
15 30 0.100442233 ubox
15 34 0.968838780 ubox
15 36 0.016668236 ubox
16 20 0.057067936 ubox
16 29 0.100522660 ubox
16 31 0.005458615 ubox
16 33 0.970002042 ubox
16 35 0.016452061 ubox
17 27 0.003322944 ubox
17 28 0.097602009 ubox
17 32 0.969846966 ubox
18 29 0.008075633 ubox
18 31 0.968842133 ubox
18 33 0.009647651 ubox
18 35 0.016593909 ubox
19 24 0.010530385 ubox
19 26 0.071332947 ubox
19 30 0.834870308 ubox
19 34 0.016403201 ubox
19 36 0.003947750 ubox
19 37 0.050293258 ubox
20 24 0.010187267 ubox
20 26 0.025102824 ubox
20 30 0.357705426 ubox
20 34 0.037054875 ubox
20 36 0.059570768 ubox
21 29 0.497037590 ubox
21 31 0.008475477 ubox
21 33 0.034230690 ubox
21 35 0.060313627 ubox
22 29 0.359381759 ubox
22 31 0.034024900 ubox
22 33 0.073789778 ubox
23 27 0.094328447 ubox
23 28 0.345529480 ubox
23 29 0.034256857 ubox
23 31 0.004506010 ubox
23 32 0.075752722 ubox
24 28 0.033208033 ubox
24 29 0.022339223 ubox
24 31 0.075074238 ubox
24 38 0.003798788 ubox
25 30 0.064147550 ubox
25 36 0.005757138 ubox
25 37 0.004301710 ubox
26 35 0.006089964 ubox
26 38 0.013103319 ubox
27 37 0.015774233 ubox
28 36 0.015807102 ubox
28 37 0.007190723 ubox
29 34 0.014586260 ubox
29 36 0.006382927 ubox
29 37 0.004250880 ubox
30 35 0.003629310 ubox
30 38 0.008228114 ubox
31 37 0.010046856 ubox
32 36 0.008724157 ubox
32 37 0.004416567 ubox
15 34 0.9500000 lbox
16 33 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
showpage
end
%%EOF
