%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Sep  8 15:45:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Eubacterium_saphenum_ATCC_49989)
} def

/sequence { (\
GUAAAGAGGGCGACCCGCUGCCGUGGAAACAAAAAGGUGGAACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.271098034 ubox
1 14 0.063982564 ubox
1 16 0.007091559 ubox
1 18 0.012160086 ubox
1 21 0.042929133 ubox
1 22 0.023073901 ubox
1 30 0.181972314 ubox
1 43 0.064397307 ubox
2 6 0.009764280 ubox
2 7 0.018133407 ubox
2 8 0.014215728 ubox
2 9 0.027206782 ubox
2 10 0.267800260 ubox
2 12 0.006990006 ubox
2 13 0.062355889 ubox
2 17 0.012863060 ubox
2 20 0.042905889 ubox
2 25 0.007362814 ubox
2 26 0.005965405 ubox
2 27 0.010614047 ubox
2 28 0.009678074 ubox
2 29 0.176565471 ubox
2 39 0.003849506 ubox
2 41 0.006853454 ubox
2 42 0.062168842 ubox
3 19 0.034635396 ubox
3 24 0.007496447 ubox
3 38 0.003872761 ubox
3 44 0.003463953 ubox
4 19 0.009027375 ubox
4 24 0.006797182 ubox
4 44 0.004194928 ubox
5 19 0.152478556 ubox
5 24 0.008394944 ubox
5 44 0.029601012 ubox
6 11 0.071195142 ubox
6 14 0.028443270 ubox
6 15 0.009774054 ubox
6 16 0.124422689 ubox
6 18 0.160449045 ubox
6 19 0.003558312 ubox
6 21 0.008933785 ubox
6 22 0.037155281 ubox
6 24 0.013359933 ubox
6 30 0.005823191 ubox
6 43 0.032539317 ubox
6 44 0.009155854 ubox
7 19 0.012284068 ubox
7 24 0.211280085 ubox
7 44 0.195967425 ubox
8 14 0.113827347 ubox
8 15 0.218720800 ubox
8 16 0.446094479 ubox
8 18 0.012588962 ubox
8 19 0.004158355 ubox
8 21 0.009819654 ubox
8 22 0.020841558 ubox
8 24 0.009730396 ubox
8 30 0.004066666 ubox
8 43 0.214505093 ubox
8 44 0.089865858 ubox
9 14 0.251143300 ubox
9 15 0.447026468 ubox
9 16 0.052236402 ubox
9 18 0.003823237 ubox
9 19 0.071306818 ubox
9 21 0.019454928 ubox
9 22 0.254032793 ubox
9 30 0.005947725 ubox
9 43 0.099675199 ubox
9 44 0.075427144 ubox
10 14 0.440226032 ubox
10 15 0.051723782 ubox
10 16 0.006840623 ubox
10 18 0.077671709 ubox
10 21 0.254185479 ubox
10 30 0.005039247 ubox
10 43 0.082179095 ubox
10 44 0.020798523 ubox
11 17 0.078574989 ubox
11 20 0.254226058 ubox
11 37 0.003165419 ubox
11 39 0.004983049 ubox
11 40 0.208704012 ubox
12 16 0.073618991 ubox
12 18 0.032881952 ubox
12 19 0.209619759 ubox
12 30 0.006325671 ubox
12 38 0.003416573 ubox
12 43 0.249423278 ubox
12 44 0.012466089 ubox
13 19 0.010436028 ubox
13 38 0.207030908 ubox
13 44 0.017224749 ubox
14 26 0.006274870 ubox
14 36 0.006974140 ubox
14 37 0.206483097 ubox
14 39 0.004791278 ubox
14 40 0.042549992 ubox
15 25 0.005993889 ubox
15 26 0.128084584 ubox
15 36 0.170794466 ubox
15 37 0.020969150 ubox
15 39 0.033396027 ubox
15 40 0.789659784 ubox
16 23 0.023467259 ubox
16 25 0.169380641 ubox
16 26 0.010901236 ubox
16 36 0.028832056 ubox
16 37 0.009648040 ubox
16 39 0.801590487 ubox
16 40 0.008629769 ubox
17 22 0.022933451 ubox
17 24 0.169743548 ubox
17 30 0.004998415 ubox
17 38 0.803274748 ubox
17 43 0.050644144 ubox
17 44 0.006614012 ubox
18 23 0.169643909 ubox
18 25 0.013634095 ubox
18 26 0.012501489 ubox
18 36 0.041879414 ubox
18 37 0.803143140 ubox
18 39 0.017132470 ubox
18 40 0.450729186 ubox
19 25 0.012210966 ubox
19 28 0.004756254 ubox
19 29 0.003194071 ubox
19 31 0.037118434 ubox
19 32 0.022384159 ubox
19 33 0.022684392 ubox
19 34 0.048760403 ubox
19 35 0.058133549 ubox
19 36 0.796687198 ubox
19 39 0.452387769 ubox
19 40 0.003318919 ubox
19 41 0.005726762 ubox
19 42 0.003453224 ubox
20 24 0.005743727 ubox
20 30 0.038048405 ubox
20 38 0.478813157 ubox
20 43 0.004216716 ubox
21 25 0.003965969 ubox
21 26 0.007870465 ubox
21 36 0.007796142 ubox
21 37 0.481294279 ubox
21 39 0.005306462 ubox
21 40 0.040031933 ubox
22 26 0.006363735 ubox
22 36 0.480742431 ubox
22 37 0.008159237 ubox
22 39 0.040206414 ubox
22 40 0.003212296 ubox
23 30 0.210565256 ubox
23 38 0.034714696 ubox
23 43 0.068799956 ubox
24 28 0.006131863 ubox
24 29 0.208975738 ubox
24 31 0.804197625 ubox
24 32 0.060191627 ubox
24 33 0.127117439 ubox
24 34 0.105573254 ubox
24 35 0.064865017 ubox
24 36 0.003378910 ubox
24 37 0.017193759 ubox
24 41 0.003845218 ubox
24 42 0.068503198 ubox
25 30 0.821399332 ubox
25 43 0.031220341 ubox
25 44 0.025887114 ubox
26 30 0.052523673 ubox
26 43 0.029134431 ubox
27 38 0.003454799 ubox
28 38 0.009318370 ubox
29 38 0.084627269 ubox
30 36 0.036571781 ubox
30 37 0.085948756 ubox
30 39 0.058940438 ubox
30 40 0.006300659 ubox
31 38 0.054047100 ubox
32 38 0.005352489 ubox
33 38 0.005149590 ubox
34 44 0.004810876 ubox
35 44 0.098110008 ubox
36 43 0.108915736 ubox
36 44 0.056887946 ubox
37 43 0.063219931 ubox
37 44 0.003334019 ubox
38 42 0.057051443 ubox
39 43 0.009348516 ubox
39 44 0.003521335 ubox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
18 37 0.9500000 lbox
19 36 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
