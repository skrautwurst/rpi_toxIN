%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Sep  8 15:45:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Clostridium_sp._HGF2)
} def

/sequence { (\
AAAAAGCGGUGUACUCUACCCUGGAGAAAUCUAAAAGUGAGAGCUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.011543756 ubox
1 12 0.004814003 ubox
1 38 0.006086464 ubox
1 45 0.004426800 ubox
2 10 0.010660543 ubox
2 12 0.006669836 ubox
2 38 0.007738050 ubox
2 45 0.006445230 ubox
3 10 0.017493000 ubox
3 12 0.012607754 ubox
3 22 0.003646349 ubox
3 32 0.003735839 ubox
3 38 0.005365677 ubox
3 45 0.007827354 ubox
4 10 0.013811288 ubox
4 12 0.008214870 ubox
4 22 0.012129789 ubox
4 32 0.005233533 ubox
4 38 0.003903482 ubox
4 45 0.021634986 ubox
5 10 0.028718909 ubox
5 12 0.024499394 ubox
5 15 0.005060299 ubox
5 17 0.019942660 ubox
5 22 0.231683584 ubox
5 32 0.018849541 ubox
5 38 0.003476279 ubox
5 45 0.452741444 ubox
6 10 0.005830342 ubox
6 12 0.076271301 ubox
6 14 0.005896668 ubox
6 16 0.020846535 ubox
6 19 0.006765589 ubox
6 20 0.003191222 ubox
6 21 0.261928787 ubox
6 22 0.015756502 ubox
6 31 0.018114490 ubox
6 32 0.025086839 ubox
6 38 0.022722425 ubox
6 44 0.469762043 ubox
6 45 0.011663644 ubox
7 11 0.077690025 ubox
7 23 0.058655490 ubox
7 24 0.008018110 ubox
7 26 0.003202568 ubox
7 37 0.023896929 ubox
7 39 0.009744183 ubox
7 41 0.006926275 ubox
7 43 0.467669465 ubox
8 12 0.007100117 ubox
8 14 0.040035252 ubox
8 15 0.012880403 ubox
8 16 0.009588143 ubox
8 17 0.016995736 ubox
8 19 0.007345395 ubox
8 20 0.396090608 ubox
8 21 0.218138803 ubox
8 22 0.057392870 ubox
8 30 0.005904600 ubox
8 31 0.225804879 ubox
8 32 0.103641820 ubox
8 38 0.007563102 ubox
8 44 0.049694322 ubox
8 45 0.343386946 ubox
9 14 0.015842237 ubox
9 15 0.007790247 ubox
9 16 0.018078512 ubox
9 19 0.396929805 ubox
9 20 0.217723978 ubox
9 21 0.058186955 ubox
9 30 0.227029443 ubox
9 31 0.107254062 ubox
9 32 0.005115909 ubox
9 44 0.360441739 ubox
9 45 0.061110254 ubox
10 18 0.395373889 ubox
10 27 0.005212902 ubox
10 28 0.009422585 ubox
10 29 0.225865385 ubox
10 33 0.006716852 ubox
10 34 0.003963137 ubox
10 36 0.007000835 ubox
10 39 0.005601592 ubox
10 40 0.088608953 ubox
10 41 0.055082181 ubox
10 42 0.051194549 ubox
10 43 0.347912555 ubox
10 46 0.044374686 ubox
11 15 0.005147971 ubox
11 16 0.126713740 ubox
11 17 0.354774279 ubox
11 19 0.223327420 ubox
11 20 0.010592715 ubox
11 30 0.020415270 ubox
11 31 0.017019202 ubox
11 32 0.006075542 ubox
11 38 0.004489710 ubox
11 44 0.386927539 ubox
11 45 0.039654248 ubox
12 18 0.221931206 ubox
12 27 0.089710624 ubox
12 28 0.088776721 ubox
12 29 0.020901894 ubox
12 33 0.007823764 ubox
12 39 0.280742253 ubox
12 40 0.029659669 ubox
12 41 0.010595921 ubox
12 42 0.145694664 ubox
12 43 0.377106788 ubox
12 46 0.124058009 ubox
13 17 0.196812326 ubox
13 30 0.004134701 ubox
13 32 0.008038601 ubox
13 38 0.288654310 ubox
13 45 0.142122697 ubox
14 23 0.004567363 ubox
14 24 0.003355267 ubox
14 26 0.283684420 ubox
14 37 0.288248036 ubox
14 39 0.036217254 ubox
14 41 0.569244979 ubox
14 43 0.527077897 ubox
15 24 0.010896468 ubox
15 25 0.285595777 ubox
15 27 0.020307870 ubox
15 34 0.004960610 ubox
15 35 0.009116871 ubox
15 36 0.277943902 ubox
15 40 0.572755701 ubox
15 41 0.005682608 ubox
15 42 0.539831166 ubox
16 23 0.018756273 ubox
16 24 0.286285906 ubox
16 26 0.024672030 ubox
16 37 0.047932845 ubox
16 39 0.569199848 ubox
16 41 0.540428035 ubox
16 43 0.004999762 ubox
17 23 0.283439485 ubox
17 25 0.023468676 ubox
17 33 0.018500424 ubox
17 34 0.154416406 ubox
17 35 0.045319772 ubox
17 36 0.047819798 ubox
17 37 0.031347222 ubox
17 39 0.272562589 ubox
17 40 0.468469759 ubox
17 42 0.005140239 ubox
18 22 0.235963769 ubox
18 32 0.014591509 ubox
18 38 0.570801591 ubox
19 23 0.010720076 ubox
19 24 0.012601242 ubox
19 37 0.579758681 ubox
19 39 0.180504816 ubox
19 41 0.003255784 ubox
20 37 0.198891062 ubox
20 39 0.035110233 ubox
21 26 0.009481178 ubox
21 37 0.161173867 ubox
21 39 0.016094668 ubox
21 41 0.023300897 ubox
21 43 0.004315936 ubox
22 27 0.009682871 ubox
22 28 0.011889584 ubox
22 29 0.020855251 ubox
22 33 0.832839287 ubox
22 34 0.094202865 ubox
22 35 0.063552133 ubox
22 36 0.145609436 ubox
22 37 0.006246676 ubox
22 40 0.021858515 ubox
22 42 0.004303007 ubox
22 46 0.016184277 ubox
23 30 0.007177064 ubox
23 31 0.026102455 ubox
23 32 0.915579361 ubox
23 44 0.007953507 ubox
23 45 0.030109079 ubox
24 30 0.018794762 ubox
24 31 0.922276523 ubox
24 32 0.010201815 ubox
24 38 0.012312999 ubox
24 44 0.031228888 ubox
24 45 0.005685928 ubox
25 30 0.901899484 ubox
25 32 0.143393413 ubox
25 45 0.104411013 ubox
26 30 0.006692122 ubox
26 31 0.144997296 ubox
26 32 0.007564052 ubox
26 44 0.107659169 ubox
26 45 0.005945839 ubox
27 32 0.009750312 ubox
27 45 0.022290318 ubox
28 45 0.007860589 ubox
29 38 0.015139681 ubox
29 45 0.004117309 ubox
30 35 0.003695479 ubox
30 37 0.014289231 ubox
30 40 0.120729961 ubox
30 42 0.097166689 ubox
31 37 0.020088561 ubox
31 39 0.123154975 ubox
31 41 0.103361190 ubox
31 43 0.007393465 ubox
32 36 0.018651594 ubox
32 37 0.013410061 ubox
32 39 0.021315514 ubox
32 40 0.100575113 ubox
32 41 0.008172583 ubox
32 42 0.008161048 ubox
32 46 0.005007255 ubox
33 38 0.027175162 ubox
33 45 0.004477968 ubox
34 38 0.018866660 ubox
34 45 0.005041002 ubox
35 45 0.015692766 ubox
36 45 0.334594860 ubox
37 44 0.347182723 ubox
37 45 0.004453832 ubox
38 42 0.008581996 ubox
38 43 0.341593851 ubox
38 46 0.006642641 ubox
39 44 0.019749006 ubox
39 45 0.007676263 ubox
40 45 0.006306045 ubox
14 43 0.9500000 lbox
15 42 0.9500000 lbox
16 41 0.9500000 lbox
17 40 0.9500000 lbox
18 38 0.9500000 lbox
19 37 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
