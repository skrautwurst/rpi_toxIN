%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Sep  8 15:45:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Fusobacterium_sp._3_1_5R)
} def

/sequence { (\
AGGUGUUCCACCACCUUUAAAUGAAGCAGUUAUAAAUUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.784725925 ubox
1 17 0.036303749 ubox
1 18 0.015954346 ubox
1 22 0.004079740 ubox
1 31 0.041493314 ubox
1 33 0.003475206 ubox
2 9 0.040559466 ubox
2 11 0.004182305 ubox
2 12 0.396511002 ubox
2 14 0.004078712 ubox
2 15 0.914203242 ubox
2 16 0.011168675 ubox
2 30 0.047933892 ubox
2 31 0.004526308 ubox
2 38 0.003665584 ubox
3 8 0.040490849 ubox
3 11 0.396976466 ubox
3 12 0.003279768 ubox
3 14 0.915072869 ubox
3 15 0.009967842 ubox
3 27 0.003956835 ubox
3 30 0.004442133 ubox
3 37 0.004385172 ubox
4 10 0.396518499 ubox
4 13 0.914793586 ubox
4 26 0.003822480 ubox
4 28 0.051095545 ubox
4 34 0.003233604 ubox
4 36 0.004411056 ubox
5 9 0.390208404 ubox
5 11 0.081704172 ubox
5 12 0.907298468 ubox
5 14 0.008623938 ubox
5 27 0.051673310 ubox
5 33 0.003528914 ubox
6 10 0.103792055 ubox
6 13 0.008199826 ubox
6 25 0.009307479 ubox
6 26 0.050733209 ubox
6 32 0.003509349 ubox
7 24 0.012978495 ubox
7 25 0.046462023 ubox
8 23 0.015336873 ubox
9 23 0.045933287 ubox
10 22 0.041596536 ubox
10 30 0.011747022 ubox
10 31 0.003212296 ubox
11 23 0.003243929 ubox
11 29 0.012327374 ubox
12 23 0.010701895 ubox
12 29 0.013775966 ubox
13 17 0.003301073 ubox
13 18 0.006724727 ubox
13 22 0.011365373 ubox
13 30 0.086422807 ubox
13 31 0.008313931 ubox
13 37 0.005433464 ubox
13 38 0.005405603 ubox
14 23 0.014462419 ubox
14 26 0.021729235 ubox
14 29 0.091568292 ubox
15 23 0.038010486 ubox
15 26 0.239229278 ubox
15 29 0.025930918 ubox
16 20 0.006406185 ubox
16 21 0.008923789 ubox
16 23 0.018320273 ubox
16 24 0.044469887 ubox
16 25 0.247346392 ubox
16 26 0.029877721 ubox
16 28 0.025671564 ubox
16 29 0.006541144 ubox
16 32 0.006534318 ubox
16 34 0.029267947 ubox
16 35 0.044931089 ubox
16 36 0.143549887 ubox
17 21 0.010004036 ubox
17 23 0.051328171 ubox
17 24 0.249637975 ubox
17 25 0.049794984 ubox
17 26 0.036972046 ubox
17 28 0.009157096 ubox
17 29 0.011445459 ubox
17 32 0.016982092 ubox
17 34 0.056659206 ubox
17 35 0.202775976 ubox
17 36 0.036553645 ubox
18 23 0.234310992 ubox
18 24 0.051328249 ubox
18 25 0.041291119 ubox
18 26 0.014265137 ubox
18 28 0.013438125 ubox
18 29 0.007120113 ubox
18 32 0.137242282 ubox
18 34 0.212581769 ubox
18 35 0.039072578 ubox
18 36 0.024245170 ubox
19 30 0.009554441 ubox
19 31 0.142497589 ubox
19 33 0.205595526 ubox
19 37 0.010248445 ubox
19 38 0.017677927 ubox
20 30 0.118531016 ubox
20 31 0.281501803 ubox
20 33 0.017888967 ubox
20 37 0.018929023 ubox
20 38 0.073096464 ubox
21 30 0.296942114 ubox
21 31 0.041710110 ubox
21 33 0.262218880 ubox
21 37 0.080730903 ubox
21 38 0.009340773 ubox
22 26 0.008179156 ubox
22 28 0.157213815 ubox
22 29 0.294741241 ubox
22 32 0.276927878 ubox
22 34 0.025926849 ubox
22 35 0.018300166 ubox
22 36 0.080997246 ubox
23 27 0.161302991 ubox
23 30 0.017935075 ubox
23 31 0.278532824 ubox
23 33 0.026070783 ubox
23 37 0.003209155 ubox
23 38 0.014772220 ubox
23 39 0.159222141 ubox
24 30 0.264562417 ubox
24 31 0.083965552 ubox
24 33 0.023260440 ubox
24 37 0.015095566 ubox
24 38 0.160923255 ubox
25 30 0.087331565 ubox
25 31 0.028267332 ubox
25 33 0.037924155 ubox
25 37 0.156965436 ubox
25 38 0.011820900 ubox
26 30 0.021279775 ubox
26 31 0.017485421 ubox
26 33 0.019128910 ubox
26 37 0.011300089 ubox
26 38 0.007409778 ubox
26 39 0.036092684 ubox
28 33 0.045662425 ubox
28 37 0.031378048 ubox
28 38 0.103902131 ubox
29 33 0.018210175 ubox
29 37 0.123053199 ubox
29 38 0.027000428 ubox
29 39 0.020847097 ubox
30 34 0.014155030 ubox
30 35 0.014966140 ubox
30 36 0.123714889 ubox
31 35 0.103586042 ubox
31 36 0.019691067 ubox
32 37 0.010562828 ubox
32 38 0.023333469 ubox
34 38 0.007892461 ubox
1 16 0.9500000 lbox
2 15 0.9500000 lbox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
showpage
end
%%EOF
