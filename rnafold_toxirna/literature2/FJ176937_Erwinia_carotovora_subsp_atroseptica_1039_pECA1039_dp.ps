%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Sep  8 15:45:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FJ176937_Erwinia_carotovora_subsp_atroseptica_1039_pECA1039)
} def

/sequence { (\
AGGUGAUUUGCUACCUUUAAGUGCAGCUAGAAAUUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.007444498 ubox
1 8 0.008844653 ubox
1 9 0.007287598 ubox
1 12 0.023592109 ubox
1 16 0.623203700 ubox
1 17 0.027604098 ubox
1 18 0.011953194 ubox
1 28 0.286046637 ubox
1 34 0.014088297 ubox
1 35 0.018616512 ubox
2 7 0.013725080 ubox
2 8 0.009366065 ubox
2 9 0.007471464 ubox
2 11 0.025019812 ubox
2 12 0.047371591 ubox
2 14 0.005181097 ubox
2 15 0.769527300 ubox
2 16 0.010212156 ubox
2 24 0.003511634 ubox
2 27 0.302642698 ubox
2 28 0.239554140 ubox
2 34 0.024647785 ubox
2 35 0.112203021 ubox
2 36 0.049669838 ubox
3 7 0.007230292 ubox
3 8 0.010407937 ubox
3 9 0.005349157 ubox
3 11 0.049315505 ubox
3 14 0.770185589 ubox
3 15 0.009703450 ubox
3 24 0.021973968 ubox
3 27 0.248421439 ubox
3 28 0.011219028 ubox
3 34 0.134875564 ubox
3 35 0.046265537 ubox
3 36 0.031665236 ubox
4 10 0.048643974 ubox
4 13 0.768708036 ubox
4 19 0.004374795 ubox
4 23 0.021386846 ubox
4 25 0.300994302 ubox
4 26 0.234918346 ubox
4 29 0.042581364 ubox
4 30 0.049870445 ubox
4 31 0.030919357 ubox
4 32 0.027103130 ubox
4 33 0.136169557 ubox
5 9 0.023159320 ubox
5 11 0.122678352 ubox
5 12 0.716782281 ubox
5 14 0.007985676 ubox
5 18 0.004922706 ubox
5 22 0.005155291 ubox
5 24 0.301456536 ubox
5 27 0.058468757 ubox
5 28 0.042440017 ubox
5 34 0.010374032 ubox
5 35 0.174195058 ubox
5 36 0.067106891 ubox
6 12 0.029024138 ubox
6 17 0.004993427 ubox
6 22 0.279141616 ubox
6 28 0.090083817 ubox
6 34 0.189406301 ubox
6 35 0.064101644 ubox
7 13 0.003779918 ubox
7 20 0.011338781 ubox
7 21 0.279944103 ubox
7 23 0.035782067 ubox
7 25 0.012657675 ubox
7 26 0.026240693 ubox
7 29 0.036323906 ubox
7 30 0.055620323 ubox
7 31 0.116370948 ubox
7 32 0.038892420 ubox
7 33 0.191371895 ubox
8 19 0.012014864 ubox
8 20 0.279244585 ubox
8 21 0.049049968 ubox
8 23 0.007604115 ubox
8 25 0.026030878 ubox
8 26 0.310222276 ubox
8 29 0.061033455 ubox
8 30 0.123441178 ubox
8 31 0.043672483 ubox
8 32 0.189303487 ubox
8 33 0.051283539 ubox
9 19 0.277383170 ubox
9 20 0.050393710 ubox
9 21 0.007056770 ubox
9 23 0.087308884 ubox
9 25 0.442984115 ubox
9 26 0.005698117 ubox
9 29 0.116685863 ubox
9 30 0.040318478 ubox
9 31 0.184306759 ubox
9 32 0.040633397 ubox
9 33 0.004954601 ubox
10 14 0.006238164 ubox
10 15 0.013743702 ubox
10 16 0.008342209 ubox
10 17 0.022235507 ubox
10 18 0.261189923 ubox
10 22 0.116234412 ubox
10 24 0.454286025 ubox
10 27 0.253486257 ubox
10 28 0.023444876 ubox
11 21 0.118909396 ubox
11 23 0.448284937 ubox
11 26 0.254710450 ubox
11 30 0.174330339 ubox
12 19 0.028659870 ubox
12 20 0.115600288 ubox
12 21 0.038088812 ubox
12 23 0.100313930 ubox
12 25 0.240121792 ubox
12 29 0.174616947 ubox
13 17 0.014225152 ubox
13 18 0.031790849 ubox
13 22 0.398685546 ubox
13 28 0.171004638 ubox
13 35 0.003539972 ubox
14 21 0.404171063 ubox
14 23 0.198712941 ubox
14 26 0.021812791 ubox
15 21 0.187846747 ubox
15 23 0.049948613 ubox
15 26 0.169906687 ubox
15 30 0.014734673 ubox
16 20 0.172073932 ubox
16 21 0.026143459 ubox
16 23 0.019925571 ubox
16 25 0.168071870 ubox
16 26 0.007050455 ubox
16 29 0.015924959 ubox
16 30 0.016689680 ubox
16 31 0.171004186 ubox
16 32 0.213311270 ubox
16 33 0.074136563 ubox
17 21 0.012104671 ubox
17 23 0.038104876 ubox
17 25 0.011104886 ubox
17 26 0.021489739 ubox
17 29 0.022758731 ubox
17 30 0.208252239 ubox
17 31 0.295893779 ubox
17 32 0.110975556 ubox
17 33 0.031113152 ubox
18 23 0.039039802 ubox
18 25 0.023720618 ubox
18 26 0.007883294 ubox
18 29 0.218952052 ubox
18 30 0.295771568 ubox
18 31 0.115755487 ubox
18 32 0.034246142 ubox
18 33 0.006979780 ubox
19 28 0.179579163 ubox
19 34 0.006476766 ubox
19 35 0.024856585 ubox
20 28 0.467240590 ubox
20 34 0.027636935 ubox
20 35 0.063457915 ubox
21 27 0.496666015 ubox
21 28 0.018762008 ubox
21 34 0.074240085 ubox
21 35 0.007033852 ubox
21 36 0.010037423 ubox
22 26 0.464672746 ubox
22 29 0.024903246 ubox
22 30 0.011774074 ubox
22 31 0.030331166 ubox
22 32 0.018162189 ubox
22 33 0.074792455 ubox
23 27 0.021441163 ubox
23 28 0.023518614 ubox
23 34 0.003953690 ubox
23 35 0.004014542 ubox
23 36 0.008276943 ubox
24 30 0.066131324 ubox
25 34 0.020312459 ubox
25 35 0.010814620 ubox
26 34 0.011275398 ubox
26 35 0.010120864 ubox
26 36 0.007093662 ubox
28 32 0.009187559 ubox
28 33 0.014866944 ubox
29 34 0.024484453 ubox
29 35 0.017241439 ubox
30 34 0.014458491 ubox
30 35 0.016256473 ubox
30 36 0.068373488 ubox
31 35 0.060111660 ubox
1 16 0.9500000 lbox
2 15 0.9500000 lbox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
showpage
end
%%EOF
