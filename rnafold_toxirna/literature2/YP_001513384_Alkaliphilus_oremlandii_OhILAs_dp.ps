%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Sep  8 15:45:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (YP_001513384_Alkaliphilus_oremlandii_OhILAs)
} def

/sequence { (\
UAAUUCAAGGUAUUUCGCAACCUUCUAAAAAUGCGACUUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.010247360 ubox
1 8 0.013514683 ubox
1 9 0.008087529 ubox
1 10 0.011113934 ubox
1 12 0.023574811 ubox
1 27 0.015293742 ubox
1 28 0.007863338 ubox
1 29 0.010267241 ubox
1 30 0.016029333 ubox
1 31 0.008094037 ubox
1 33 0.009186486 ubox
1 40 0.017937626 ubox
2 11 0.025003885 ubox
2 13 0.004215747 ubox
2 14 0.042219431 ubox
2 15 0.005910395 ubox
2 26 0.015328080 ubox
2 32 0.009956284 ubox
2 39 0.023300036 ubox
3 11 0.041111566 ubox
3 13 0.048301053 ubox
3 14 0.010111454 ubox
3 24 0.003535683 ubox
3 26 0.019100251 ubox
3 32 0.021806954 ubox
3 38 0.022842094 ubox
3 39 0.006549965 ubox
4 8 0.006293285 ubox
4 9 0.008852160 ubox
4 10 0.041975989 ubox
4 12 0.048093237 ubox
4 27 0.068858944 ubox
4 28 0.037414261 ubox
4 29 0.034272952 ubox
4 30 0.012721762 ubox
4 31 0.022119088 ubox
4 36 0.005707375 ubox
4 40 0.008029444 ubox
5 9 0.031677138 ubox
5 10 0.009051583 ubox
5 12 0.009073550 ubox
5 27 0.040151186 ubox
5 28 0.038314781 ubox
5 29 0.013157977 ubox
5 30 0.020761477 ubox
5 35 0.005845210 ubox
5 36 0.035287074 ubox
5 40 0.012084019 ubox
6 10 0.019738606 ubox
6 33 0.012192331 ubox
6 35 0.037190034 ubox
6 40 0.690639933 ubox
7 11 0.005588225 ubox
7 13 0.006594320 ubox
7 14 0.032276712 ubox
7 15 0.008727768 ubox
7 23 0.006113942 ubox
7 24 0.283772718 ubox
7 26 0.009088299 ubox
7 32 0.010710287 ubox
7 38 0.004306264 ubox
7 39 0.704438191 ubox
8 13 0.034695594 ubox
8 14 0.014170915 ubox
8 15 0.007024155 ubox
8 23 0.318111592 ubox
8 24 0.007676890 ubox
8 26 0.004921088 ubox
8 38 0.705823066 ubox
8 39 0.266788962 ubox
9 13 0.010745193 ubox
9 14 0.010777742 ubox
9 15 0.004247593 ubox
9 16 0.008726411 ubox
9 18 0.003589075 ubox
9 22 0.322280109 ubox
9 25 0.004753014 ubox
9 37 0.703590049 ubox
9 38 0.294606337 ubox
9 39 0.011268962 ubox
10 14 0.007970393 ubox
10 15 0.011287609 ubox
10 16 0.005963129 ubox
10 18 0.005008940 ubox
10 21 0.322286362 ubox
10 24 0.004292881 ubox
10 34 0.116304408 ubox
10 37 0.303177442 ubox
10 38 0.011291846 ubox
10 39 0.019627121 ubox
11 17 0.005287590 ubox
11 19 0.008426444 ubox
11 20 0.319734890 ubox
11 33 0.116878221 ubox
11 35 0.005743325 ubox
11 36 0.199310609 ubox
11 40 0.200733160 ubox
12 32 0.116923293 ubox
12 38 0.020343020 ubox
12 39 0.246853503 ubox
13 17 0.007988477 ubox
13 19 0.018874379 ubox
13 20 0.006105881 ubox
13 29 0.003710462 ubox
13 30 0.006809083 ubox
13 31 0.116463315 ubox
13 35 0.005761587 ubox
13 36 0.015743843 ubox
13 40 0.016496798 ubox
14 19 0.011496029 ubox
14 20 0.003516684 ubox
14 28 0.005395519 ubox
14 29 0.009437783 ubox
14 30 0.114662371 ubox
14 31 0.003309384 ubox
14 35 0.006678898 ubox
14 36 0.051777694 ubox
14 40 0.010024409 ubox
15 19 0.005969008 ubox
15 27 0.006252918 ubox
15 28 0.010759821 ubox
15 29 0.105139895 ubox
15 30 0.003769789 ubox
15 35 0.010253982 ubox
15 36 0.893481909 ubox
16 35 0.938218573 ubox
17 22 0.004052733 ubox
17 24 0.005289980 ubox
17 25 0.025076409 ubox
17 26 0.016688735 ubox
17 34 0.938983253 ubox
18 33 0.938872572 ubox
19 23 0.007728680 ubox
19 24 0.018020041 ubox
19 26 0.019521268 ubox
19 32 0.874203626 ubox
20 24 0.016243590 ubox
20 26 0.030069861 ubox
20 32 0.042576081 ubox
22 33 0.003189182 ubox
23 27 0.045296028 ubox
23 28 0.119904236 ubox
23 29 0.125451739 ubox
23 30 0.220196920 ubox
23 31 0.125893432 ubox
24 28 0.114028248 ubox
24 29 0.196918106 ubox
24 30 0.120535803 ubox
24 31 0.052264386 ubox
24 35 0.003249003 ubox
24 36 0.023657945 ubox
25 33 0.019747388 ubox
25 35 0.030826630 ubox
25 40 0.006973830 ubox
26 30 0.008276382 ubox
26 31 0.030238825 ubox
26 33 0.018603481 ubox
26 35 0.006653132 ubox
26 40 0.009301017 ubox
27 32 0.018290979 ubox
27 39 0.011773907 ubox
28 32 0.006397946 ubox
28 38 0.011279639 ubox
28 39 0.018518753 ubox
29 38 0.019211975 ubox
29 39 0.013080281 ubox
30 38 0.013075513 ubox
30 39 0.019423785 ubox
31 38 0.018306763 ubox
31 39 0.010947721 ubox
32 36 0.003769881 ubox
32 40 0.003578299 ubox
33 37 0.011677237 ubox
33 38 0.003999495 ubox
33 39 0.005233800 ubox
34 40 0.015666720 ubox
35 39 0.010255411 ubox
6 40 0.9500000 lbox
7 39 0.9500000 lbox
8 38 0.9500000 lbox
9 37 0.9500000 lbox
15 36 0.9500000 lbox
16 35 0.9500000 lbox
17 34 0.9500000 lbox
18 33 0.9500000 lbox
19 32 0.9500000 lbox
showpage
end
%%EOF
