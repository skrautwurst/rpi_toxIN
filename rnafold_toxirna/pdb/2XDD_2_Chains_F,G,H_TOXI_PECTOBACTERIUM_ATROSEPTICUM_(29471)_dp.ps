%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Sep  8 15:41:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (2XDD_2_Chains_F,G,H_TOXI_PECTOBACTERIUM_ATROSEPTICUM_(29471))
} def

/sequence { (\
AUUCAGGUGAUUUGCUACCUUUAAGUGCAGCUAGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.012061391 ubox
1 11 0.013913130 ubox
1 12 0.011789169 ubox
1 13 0.003255141 ubox
1 21 0.011402956 ubox
1 22 0.027965397 ubox
1 26 0.126544787 ubox
2 7 0.011884994 ubox
2 9 0.005467052 ubox
2 10 0.015427277 ubox
2 23 0.128131104 ubox
2 24 0.060485694 ubox
2 25 0.131286210 ubox
2 27 0.010453592 ubox
2 29 0.005950604 ubox
2 30 0.007411694 ubox
2 33 0.010430775 ubox
2 34 0.028209980 ubox
2 35 0.120458150 ubox
2 36 0.504687834 ubox
3 9 0.014158284 ubox
3 10 0.078329367 ubox
3 23 0.067487870 ubox
3 24 0.129352599 ubox
3 25 0.006876196 ubox
3 27 0.003695255 ubox
3 29 0.009259622 ubox
3 33 0.040125955 ubox
3 34 0.125063061 ubox
3 35 0.662133321 ubox
3 36 0.012331372 ubox
4 9 0.083918035 ubox
4 14 0.010812763 ubox
4 25 0.027585496 ubox
4 27 0.019236258 ubox
4 30 0.009095605 ubox
4 34 0.675031919 ubox
5 11 0.006767031 ubox
5 12 0.008073279 ubox
5 13 0.011731689 ubox
5 16 0.013743512 ubox
5 20 0.586360906 ubox
5 21 0.029126116 ubox
5 22 0.010875536 ubox
5 26 0.013997458 ubox
5 32 0.638555067 ubox
6 11 0.009953918 ubox
6 12 0.011644892 ubox
6 13 0.004522145 ubox
6 15 0.014453341 ubox
6 16 0.025251407 ubox
6 19 0.634502039 ubox
6 20 0.008715200 ubox
6 31 0.644569142 ubox
6 32 0.300959126 ubox
7 11 0.007964717 ubox
7 12 0.006470477 ubox
7 13 0.003262076 ubox
7 15 0.026352641 ubox
7 18 0.634738346 ubox
7 19 0.008045229 ubox
7 28 0.017566549 ubox
7 31 0.325464899 ubox
7 32 0.015880279 ubox
8 14 0.026027972 ubox
8 17 0.633518132 ubox
8 23 0.004673092 ubox
8 27 0.017118065 ubox
8 29 0.637966618 ubox
8 30 0.308104647 ubox
8 33 0.029774130 ubox
8 34 0.029231459 ubox
8 35 0.017338753 ubox
8 36 0.009048659 ubox
9 13 0.012763788 ubox
9 15 0.101065281 ubox
9 16 0.590723859 ubox
9 18 0.006427274 ubox
9 22 0.005135039 ubox
9 26 0.004210076 ubox
9 28 0.637485300 ubox
9 31 0.044580236 ubox
9 32 0.029116793 ubox
10 16 0.023939964 ubox
10 21 0.005482022 ubox
10 26 0.587206395 ubox
10 32 0.053702365 ubox
11 17 0.003175870 ubox
11 24 0.019510557 ubox
11 25 0.588712631 ubox
11 27 0.072411635 ubox
11 29 0.015311658 ubox
11 30 0.021048200 ubox
11 33 0.013876931 ubox
11 34 0.022025374 ubox
11 35 0.057532351 ubox
11 36 0.014179910 ubox
12 17 0.003501030 ubox
12 23 0.021370149 ubox
12 24 0.587180891 ubox
12 25 0.102836233 ubox
12 27 0.014083773 ubox
12 29 0.025346719 ubox
12 30 0.225320478 ubox
12 33 0.027566607 ubox
12 34 0.061807069 ubox
12 35 0.018028141 ubox
12 36 0.005664841 ubox
13 23 0.583256245 ubox
13 24 0.105634462 ubox
13 25 0.012929251 ubox
13 27 0.165453813 ubox
13 29 0.393765736 ubox
13 30 0.003710108 ubox
13 33 0.058494078 ubox
13 34 0.016480081 ubox
13 35 0.007502491 ubox
14 18 0.012796475 ubox
14 19 0.028195794 ubox
14 20 0.017396526 ubox
14 21 0.046454621 ubox
14 22 0.549203412 ubox
14 26 0.213918262 ubox
14 28 0.401549713 ubox
14 31 0.116488782 ubox
14 32 0.011709381 ubox
15 25 0.219382946 ubox
15 27 0.396506041 ubox
15 30 0.117186177 ubox
15 34 0.027742067 ubox
16 23 0.046553280 ubox
16 24 0.212977768 ubox
16 25 0.033824399 ubox
16 27 0.091332754 ubox
16 29 0.110475820 ubox
16 33 0.027851801 ubox
17 21 0.029225357 ubox
17 22 0.053942191 ubox
17 26 0.344682426 ubox
17 32 0.027292904 ubox
18 25 0.348942456 ubox
18 27 0.091643510 ubox
18 30 0.003592587 ubox
19 25 0.104061948 ubox
19 27 0.023614655 ubox
19 30 0.027391407 ubox
19 34 0.008979380 ubox
20 24 0.097443243 ubox
20 25 0.012456231 ubox
20 27 0.009669275 ubox
20 29 0.027296451 ubox
20 30 0.003218634 ubox
20 33 0.009704086 ubox
20 34 0.009866607 ubox
20 35 0.101120312 ubox
20 36 0.060783037 ubox
21 25 0.006644763 ubox
21 27 0.013145964 ubox
21 29 0.006849478 ubox
21 30 0.016607969 ubox
21 33 0.017215367 ubox
21 34 0.140659997 ubox
21 35 0.179553085 ubox
21 36 0.035804320 ubox
22 27 0.010057130 ubox
22 29 0.018705467 ubox
22 30 0.006576152 ubox
22 33 0.152444048 ubox
22 34 0.183428152 ubox
22 35 0.047749508 ubox
22 36 0.007263705 ubox
23 32 0.125265912 ubox
24 32 0.346497598 ubox
25 31 0.367961656 ubox
25 32 0.013367108 ubox
26 30 0.344264707 ubox
26 33 0.021008289 ubox
26 34 0.009916339 ubox
26 35 0.024995691 ubox
26 36 0.008580493 ubox
27 31 0.018063771 ubox
27 32 0.019999051 ubox
28 34 0.048449181 ubox
32 36 0.003425760 ubox
5 20 0.9500000 lbox
6 19 0.9500000 lbox
7 18 0.9500000 lbox
8 17 0.9500000 lbox
9 16 0.9500000 lbox
showpage
end
%%EOF
