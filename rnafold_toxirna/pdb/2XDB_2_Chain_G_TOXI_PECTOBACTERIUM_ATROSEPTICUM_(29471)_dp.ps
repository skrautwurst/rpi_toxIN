%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Sep  8 15:41:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (2XDB_2_Chain_G_TOXI_PECTOBACTERIUM_ATROSEPTICUM_(29471))
} def

/sequence { (\
AUUCAGGUGAUUUGCUACCUUUAAGUGCAGCUAGAAAUUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.011448119 ubox
1 11 0.011940802 ubox
1 12 0.010117209 ubox
1 21 0.009829232 ubox
1 22 0.024106312 ubox
1 26 0.108270673 ubox
1 38 0.077154340 ubox
1 39 0.019729820 ubox
2 7 0.011279613 ubox
2 9 0.004771965 ubox
2 10 0.013253483 ubox
2 23 0.110367816 ubox
2 24 0.051899262 ubox
2 25 0.112331499 ubox
2 27 0.008942958 ubox
2 29 0.005087328 ubox
2 30 0.006334904 ubox
2 33 0.008908613 ubox
2 34 0.024024216 ubox
2 35 0.102570511 ubox
2 36 0.645902989 ubox
2 37 0.075968210 ubox
3 9 0.012176363 ubox
3 10 0.067456910 ubox
3 23 0.057972216 ubox
3 24 0.110695228 ubox
3 25 0.005886434 ubox
3 29 0.007915525 ubox
3 33 0.034250103 ubox
3 34 0.106573378 ubox
3 35 0.743295746 ubox
3 36 0.061028436 ubox
3 37 0.006539424 ubox
4 9 0.072399463 ubox
4 14 0.009810455 ubox
4 25 0.023624532 ubox
4 27 0.016468542 ubox
4 30 0.007805438 ubox
4 34 0.752673629 ubox
5 11 0.005935549 ubox
5 12 0.007081749 ubox
5 13 0.010590650 ubox
5 16 0.013143094 ubox
5 20 0.511572722 ubox
5 21 0.025294196 ubox
5 22 0.009395420 ubox
5 26 0.011986474 ubox
5 32 0.694124600 ubox
5 38 0.010625672 ubox
5 39 0.014037519 ubox
6 11 0.008733336 ubox
6 12 0.010479443 ubox
6 13 0.003979069 ubox
6 15 0.013811091 ubox
6 16 0.024131138 ubox
6 19 0.561882369 ubox
6 20 0.007571665 ubox
6 31 0.699596665 ubox
6 32 0.320095605 ubox
6 38 0.015794193 ubox
6 39 0.056393943 ubox
6 40 0.024964373 ubox
7 11 0.007166920 ubox
7 12 0.005756968 ubox
7 15 0.025172170 ubox
7 18 0.562125479 ubox
7 19 0.007020987 ubox
7 28 0.017028106 ubox
7 31 0.347525186 ubox
7 32 0.017173564 ubox
7 38 0.067818494 ubox
7 39 0.023253426 ubox
7 40 0.015915797 ubox
8 14 0.024854441 ubox
8 17 0.561044851 ubox
8 23 0.004041721 ubox
8 27 0.016599748 ubox
8 29 0.692358579 ubox
8 30 0.329006759 ubox
8 33 0.028475058 ubox
8 34 0.025295781 ubox
8 35 0.016255218 ubox
8 36 0.014019238 ubox
8 37 0.068497110 ubox
9 13 0.012103879 ubox
9 15 0.089510210 ubox
9 16 0.523146278 ubox
9 18 0.005681082 ubox
9 22 0.004533471 ubox
9 26 0.004108153 ubox
9 28 0.691801895 ubox
9 31 0.043533765 ubox
9 32 0.027612378 ubox
9 38 0.005220347 ubox
9 39 0.087666464 ubox
9 40 0.033773967 ubox
10 16 0.021217418 ubox
10 21 0.005008198 ubox
10 26 0.637146718 ubox
10 32 0.047082677 ubox
10 38 0.095424094 ubox
10 39 0.032268078 ubox
11 24 0.021002533 ubox
11 25 0.638776438 ubox
11 27 0.078509381 ubox
11 29 0.016221184 ubox
11 30 0.020672630 ubox
11 33 0.019191212 ubox
11 34 0.028761209 ubox
11 35 0.060797995 ubox
11 36 0.020455218 ubox
11 37 0.096521648 ubox
12 17 0.003571412 ubox
12 23 0.023039808 ubox
12 24 0.637112689 ubox
12 25 0.111578184 ubox
12 27 0.015235888 ubox
12 29 0.026004008 ubox
12 30 0.213649517 ubox
12 33 0.031966555 ubox
12 34 0.064556855 ubox
12 35 0.022962672 ubox
12 36 0.095525323 ubox
12 37 0.026087171 ubox
13 23 0.632853989 ubox
13 24 0.114613578 ubox
13 25 0.013984103 ubox
13 27 0.179060329 ubox
13 29 0.396661972 ubox
13 30 0.003527482 ubox
13 33 0.061078592 ubox
13 34 0.021167502 ubox
13 35 0.093015060 ubox
13 36 0.020698164 ubox
14 18 0.013875681 ubox
14 19 0.030575468 ubox
14 20 0.018870699 ubox
14 21 0.050394571 ubox
14 22 0.595905357 ubox
14 26 0.231309239 ubox
14 28 0.403992248 ubox
14 31 0.132698726 ubox
14 32 0.012269494 ubox
15 25 0.237232040 ubox
15 27 0.398969837 ubox
15 30 0.133355580 ubox
15 34 0.088539883 ubox
16 23 0.050034728 ubox
16 24 0.230292827 ubox
16 25 0.034066746 ubox
16 27 0.095811719 ubox
16 29 0.125718829 ubox
16 33 0.088688650 ubox
17 21 0.031695875 ubox
17 22 0.058110756 ubox
17 26 0.348838863 ubox
17 32 0.086854553 ubox
18 25 0.353170268 ubox
18 27 0.104322943 ubox
18 30 0.011083491 ubox
19 25 0.112969492 ubox
19 27 0.027157227 ubox
19 30 0.086310787 ubox
19 34 0.007771525 ubox
20 24 0.105270694 ubox
20 25 0.013969366 ubox
20 27 0.010791578 ubox
20 29 0.085384009 ubox
20 30 0.003677646 ubox
20 33 0.008413629 ubox
20 34 0.008407137 ubox
20 35 0.086126759 ubox
20 36 0.107397601 ubox
20 37 0.037322278 ubox
21 25 0.007066658 ubox
21 27 0.020807358 ubox
21 29 0.006906483 ubox
21 30 0.015163699 ubox
21 33 0.014955132 ubox
21 34 0.119849290 ubox
21 35 0.179445757 ubox
21 36 0.069021705 ubox
21 37 0.021781818 ubox
22 27 0.020487185 ubox
22 29 0.016912655 ubox
22 30 0.005777032 ubox
22 33 0.130513146 ubox
22 34 0.181009025 ubox
22 35 0.073097929 ubox
22 36 0.023975473 ubox
22 37 0.004888157 ubox
23 32 0.107331008 ubox
23 38 0.004541631 ubox
23 39 0.017429778 ubox
24 32 0.320044394 ubox
24 38 0.019522116 ubox
24 39 0.045830138 ubox
25 31 0.338184196 ubox
25 32 0.013289838 ubox
25 38 0.053756270 ubox
25 39 0.005128434 ubox
25 40 0.007318362 ubox
26 30 0.316402683 ubox
26 33 0.018923313 ubox
26 34 0.008599399 ubox
26 35 0.022152995 ubox
26 36 0.013223160 ubox
26 37 0.054168763 ubox
27 31 0.016360555 ubox
27 32 0.017970004 ubox
27 40 0.006258716 ubox
28 34 0.049205175 ubox
29 38 0.015273784 ubox
29 39 0.008132049 ubox
30 38 0.008396338 ubox
30 39 0.007376248 ubox
30 40 0.005169515 ubox
32 36 0.006368160 ubox
32 37 0.010292524 ubox
33 38 0.016308086 ubox
33 39 0.011463806 ubox
34 38 0.009615416 ubox
34 39 0.010812620 ubox
34 40 0.045471755 ubox
35 39 0.039996500 ubox
2 36 0.9500000 lbox
3 35 0.9500000 lbox
4 34 0.9500000 lbox
5 32 0.9500000 lbox
6 31 0.9500000 lbox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
showpage
end
%%EOF
