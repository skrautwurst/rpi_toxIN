%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Sep  8 15:41:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (4ATO_2_Chain_G_TOXI_BACILLUS)
} def

/sequence { (\
AAAUUGGUGUAACCUUACCGUAGUAGGUGCUAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 5 0.005148789 ubox
1 8 0.005803319 ubox
1 10 0.003256606 ubox
1 16 0.005711752 ubox
1 21 0.005126596 ubox
1 24 0.023530821 ubox
1 31 0.003258642 ubox
2 8 0.006299286 ubox
2 15 0.007926093 ubox
2 16 0.011106023 ubox
2 21 0.010296733 ubox
2 24 0.010463380 ubox
2 31 0.004432045 ubox
3 8 0.005836545 ubox
3 10 0.019403931 ubox
3 15 0.012206604 ubox
3 16 0.011496708 ubox
3 21 0.038698493 ubox
3 24 0.033091512 ubox
3 28 0.007882100 ubox
3 31 0.004914156 ubox
4 9 0.019573150 ubox
4 11 0.006121111 ubox
4 12 0.006953477 ubox
4 17 0.003398114 ubox
4 20 0.029762549 ubox
4 22 0.019516951 ubox
4 23 0.033069441 ubox
4 25 0.003332725 ubox
4 27 0.007965578 ubox
4 32 0.016729590 ubox
4 33 0.698159337 ubox
4 34 0.050569278 ubox
5 11 0.009249290 ubox
5 12 0.006741975 ubox
5 20 0.269833547 ubox
5 22 0.021837873 ubox
5 26 0.004731260 ubox
5 32 0.801790708 ubox
5 33 0.058609025 ubox
5 34 0.031430652 ubox
6 10 0.007951397 ubox
6 13 0.023147711 ubox
6 14 0.247657177 ubox
6 15 0.018919436 ubox
6 19 0.404276585 ubox
6 21 0.013238373 ubox
6 30 0.006544673 ubox
6 31 0.815996934 ubox
7 13 0.248021860 ubox
7 14 0.020289057 ubox
7 18 0.404520369 ubox
7 19 0.012418941 ubox
7 30 0.816473379 ubox
7 31 0.041427379 ubox
8 12 0.223448965 ubox
8 17 0.404125122 ubox
8 29 0.809626597 ubox
8 32 0.043671115 ubox
8 33 0.020869314 ubox
8 34 0.008349016 ubox
9 13 0.008283043 ubox
9 14 0.014846751 ubox
9 15 0.008534910 ubox
9 16 0.393571725 ubox
9 18 0.020444428 ubox
9 28 0.226508134 ubox
9 30 0.262397825 ubox
9 31 0.030902803 ubox
10 17 0.020803116 ubox
10 25 0.005128863 ubox
10 26 0.005010443 ubox
10 27 0.021732616 ubox
10 29 0.260277810 ubox
10 32 0.025767237 ubox
10 33 0.003724383 ubox
11 15 0.016062054 ubox
11 16 0.020335803 ubox
11 24 0.004796849 ubox
11 28 0.194762313 ubox
11 31 0.026370873 ubox
12 21 0.004760335 ubox
12 24 0.010821326 ubox
12 28 0.792002423 ubox
12 31 0.009579857 ubox
13 20 0.005057445 ubox
13 23 0.010129447 ubox
13 26 0.009131400 ubox
13 27 0.831270398 ubox
13 29 0.045295373 ubox
14 23 0.030886870 ubox
14 26 0.829120793 ubox
14 27 0.226118121 ubox
14 29 0.006414649 ubox
15 22 0.031497149 ubox
15 23 0.016118320 ubox
15 25 0.633493787 ubox
15 26 0.234500526 ubox
15 29 0.011786539 ubox
15 32 0.015744824 ubox
15 33 0.016245011 ubox
15 34 0.004999714 ubox
16 20 0.005918949 ubox
16 22 0.039969534 ubox
16 23 0.070937639 ubox
16 25 0.577481401 ubox
16 29 0.247911491 ubox
16 32 0.013833957 ubox
16 33 0.004875953 ubox
17 21 0.037491644 ubox
17 24 0.784115685 ubox
17 28 0.296801432 ubox
17 31 0.008880436 ubox
18 23 0.788650178 ubox
18 27 0.300575186 ubox
19 23 0.036258694 ubox
19 26 0.300539192 ubox
19 27 0.003271803 ubox
20 24 0.007258065 ubox
20 30 0.137530993 ubox
21 25 0.008143076 ubox
21 29 0.137708285 ubox
21 32 0.322955682 ubox
21 33 0.015088958 ubox
21 34 0.003653259 ubox
22 28 0.135591849 ubox
22 31 0.343016557 ubox
23 30 0.344964915 ubox
24 29 0.330777347 ubox
24 32 0.039650086 ubox
24 33 0.003914467 ubox
25 31 0.042134362 ubox
26 30 0.041458211 ubox
26 31 0.003890778 ubox
28 33 0.007981413 ubox
28 34 0.004522284 ubox
4 33 0.9500000 lbox
5 32 0.9500000 lbox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
8 29 0.9500000 lbox
12 28 0.9500000 lbox
13 27 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
showpage
end
%%EOF
